{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/apps": {
            "get": {
                "description": "Api to get all apps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get all apps",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "App number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "query_field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateAppResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Create app",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateAppReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.AppBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}": {
            "get": {
                "description": "api for get an app by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get an app by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.AppBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update app description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Update app description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update app description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAppReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for get an app by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get an app by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/branches": {
            "get": {
                "description": "Api for get app branches info with app id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get app branches info with app id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.AppBranchResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/builds": {
            "get": {
                "description": "Api to get all builds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get specific app's all builds info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "App number per page ",
                        "name": "per_page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.BuildBriefResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to trigger specific app's branch or tag build process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Trigger specific app's branch or tag build process",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateBuildReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.BuildBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/builds/{build_number}": {
            "get": {
                "description": "Api for get build by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get build by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Build number",
                        "name": "build_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.BuildDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/builds/{build_number}/logs/{log_number}": {
            "get": {
                "description": "Api for get specific app build log by log number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get specific app build log by log number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Build number",
                        "name": "build_number",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Log number",
                        "name": "log_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.BuildDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/charts": {
            "get": {
                "description": "Api to get an app's all charts version list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get specific app's all charts version list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChartVersion"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/config": {
            "get": {
                "description": "api for get specific app config by app_id and project_env_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "get specific app config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project env ID",
                        "name": "pe_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.AppConfDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update or create specific app conf by app_id and project_env_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Update or create specific app conf",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update or create app info",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAppConfReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.AppConfDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for delete specific app config by app_id and project_env_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "delete specific app config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project env ID",
                        "name": "pe_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/gitlab": {
            "put": {
                "description": "api for update app gitlab address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Update app gitlab address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update app gitlab address",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAppGitlabAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.AppBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/instances": {
            "get": {
                "description": "Api for get app app instance's list by app id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get app instance's list by app id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Instance number page size ",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationInstanceResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/tags": {
            "get": {
                "description": "Api for get app tags info with app id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get app tags info with app id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.AppTagResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Api to login rock platform with name and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Login rock platform with name and password",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LoginUserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "description": "Api to logout rock platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Logout rock platform",
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/pwd": {
            "put": {
                "description": "Api to update user password with secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Update user's password with secret",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ResetPwdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/reset": {
            "post": {
                "description": "Api to create reset email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Create reset email",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ResetUserReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/builds": {
            "get": {
                "description": "Api to get global builds info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BUILD"
                ],
                "summary": "Get global builds info",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "App number per page ",
                        "name": "per_page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Console project id",
                        "name": "console_project_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.BuildBriefResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/charts": {
            "get": {
                "description": "Api for get all chart list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Get all chart list",
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChartDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/charts/{name}": {
            "get": {
                "description": "Api for get named chart version list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Get named chart version list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChartVersion"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/charts/{name}/versions/{version}": {
            "get": {
                "description": "Api for get named chart specific version info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Get named chart specific version info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chart version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ChartVersion"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api for delete named chart specific version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Delete named chart specific version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chart version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters": {
            "get": {
                "description": "Api to get all k8s clusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get all clusters",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Cluster number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "query_field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationClusterResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create k8s cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Create cluster",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateClusterReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}": {
            "get": {
                "description": "Api to get a cluster by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get a cluster by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update cluster description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Update cluster description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update cluster description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateClusterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete a cluster by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Delete a cluster by id",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}/envs": {
            "get": {
                "description": "api for get cluster envs by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get cluster envs by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Env number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationEnvResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}/nodes": {
            "get": {
                "description": "api for get specific cluster's all nodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get specific cluster's all nodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ClusterNodeResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}/nodes/{name}": {
            "get": {
                "description": "api for get a specific cluster node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get a specific cluster node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterNodeResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/deployment": {
            "get": {
                "description": "Api for get all deployments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPLOYMENT"
                ],
                "summary": "Get all deployments",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Deployment number page size ",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationDeploymentResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/deployment/{id}": {
            "get": {
                "description": "Api for get deployment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPLOYMENT"
                ],
                "summary": "Get deployment by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deployment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.DeploymentDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Api for update deployment info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPLOYMENT"
                ],
                "summary": "Update deployment info and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deployment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update deployment info",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateDeploymentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusNoContent",
                        "schema": {
                            "$ref": "#/definitions/v1.DeploymentDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api for delete deployment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPLOYMENT"
                ],
                "summary": "Delete deployment by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deployment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/deployments": {
            "post": {
                "description": "Api to create deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPLOYMENT"
                ],
                "summary": "Create deployment",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateDeploymentReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.DeploymentDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/envs": {
            "get": {
                "description": "Api to get all env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Get all envs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Env number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationEnvResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Create env",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateEnvReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.EnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/envs/{id}": {
            "get": {
                "description": "api for get an env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Get an env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Env ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.EnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update env description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Update env description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Env ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update env description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.EnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for get an env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Get an env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Env ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/instances": {
            "get": {
                "description": "Api for get all instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "INSTANCE"
                ],
                "summary": "Get all instances",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Instance number page size ",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "query_field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cluster name ",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Project name ",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "App Id",
                        "name": "app_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationInstanceResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/instances/{id}": {
            "get": {
                "description": "Api for get instances by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "INSTANCE"
                ],
                "summary": "Get instances by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.InstanceDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/instances/{id}/configs": {
            "get": {
                "description": "Api for get instance's config by instance id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "INSTANCE"
                ],
                "summary": "Get instance's config by instance id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.InstanceConfResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/instances/{id}/deployments": {
            "get": {
                "description": "Api to get instance's relevant deployments by instance id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "INSTANCE"
                ],
                "summary": "Get instance's relevant deployments by instance id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Deployment number page size ",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.PaginationDeploymentResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/instances/{id}/logs": {
            "get": {
                "description": "Api to get instance's log by instance id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "INSTANCE"
                ],
                "summary": "Get instance's log by instance id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Instance's pod name",
                        "name": "pod",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod's container name",
                        "name": "container",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.InstanceLogResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/instances/{id}/pods": {
            "get": {
                "description": "Api to get instance's pods name and containers name by instance id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "INSTANCE"
                ],
                "summary": "Get instance's pods name by instance id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.InstancePodResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/nodes": {
            "get": {
                "description": "api for get cluster's all nodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NODE"
                ],
                "summary": "Get cluster's all nodes",
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.GlobalNodeResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects": {
            "get": {
                "description": "Api to get all projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get all projects",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Project number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "query_field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationProjectResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateProjectReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}": {
            "get": {
                "description": "Api to get a project by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get a project by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update project description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Update project description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update project description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete a project by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Delete a project by id",
                "parameters": [
                    {
                        "description": "Project ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}/apps": {
            "get": {
                "description": "api for get all apps by project id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get all apps by species project id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateAppResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}/project-envs": {
            "get": {
                "description": "api for get all project env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get all project env",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "api for create project env by project_id env_id name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Create project env by project_id env_id name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateProjectEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}/project-envs/{pe_id}": {
            "get": {
                "description": "api for get project env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get project env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project Env ID",
                        "name": "pe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update project env description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Update project env description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project Env ID",
                        "name": "pe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update project env description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateProjectEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for delete specific project env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Delete specific project env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project Env ID",
                        "name": "pe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/registries": {
            "get": {
                "description": "Api to get all registries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRY"
                ],
                "summary": "Get all registries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.RegistryBriefResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create registry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRY"
                ],
                "summary": "Create registry",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateRegistryReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.RegistryBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/registries/{address}": {
            "get": {
                "description": "Api to get an registry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRY"
                ],
                "summary": "Get an registry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.RegistryBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Api for update registry info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRY"
                ],
                "summary": "Update registry info with id and body",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for update registry info",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateRegistryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.RegistryBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete an registry by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRY"
                ],
                "summary": "Delete an registry by address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/repos": {
            "get": {
                "description": "Api to get remote(gitlab) all repos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPO"
                ],
                "summary": "Get remote all repos",
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.DroneRepoBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/roles": {
            "get": {
                "description": "api for get all roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Get role",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "QueryField",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateRoleResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "api for create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/roles/{id}": {
            "get": {
                "description": "api for get an role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Get an role by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update role description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Update role description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update role description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for delete an role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Delete an role by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/roles/{id}/users": {
            "get": {
                "description": "api for get all users by species role id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Get all users by species role id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateBriefUserResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/secret/{name}": {
            "get": {
                "description": "Api to get an secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SECRET"
                ],
                "summary": "Get an secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.SecretBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Api to delete an secret by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SECRET"
                ],
                "summary": "Delete an secret by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type update secret info",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateSecretReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.SecretBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete an secret by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SECRET"
                ],
                "summary": "Delete an secret by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/secrets": {
            "get": {
                "description": "Api to get all secrets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SECRET"
                ],
                "summary": "Get all secrets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.SecretBriefResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SECRET"
                ],
                "summary": "Create secret",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateSecretReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.SecretBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "Api to get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "PageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "PageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "QueryField",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserPagination"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "description": "Api to get user with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Get user with id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete user with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Delete user with id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/access": {
            "put": {
                "description": "Api to update user access token info by id and body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Update user access token info by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for update user access token",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserAccessTokenReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.UserBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/password": {
            "put": {
                "description": "Api to update user password with id and old password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Update user password with id and old password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for update user info",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserPwdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/roles": {
            "put": {
                "description": "Api to update user role by id and role id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Update user role by id and role id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for update user role",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.UserBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.UserDetailResp": {
            "type": "object",
            "required": [
                "role_description",
                "role_version"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "drone_token": {
                    "type": "string",
                    "example": "drone_token"
                },
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                },
                "gitlab_token": {
                    "type": "string",
                    "example": "gitlabe_token"
                },
                "id": {
                    "description": "type UserFullResp struct {",
                    "type": "integer",
                    "example": 1
                },
                "login_block_until": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "name": {
                    "type": "string",
                    "example": "admin_user"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                },
                "role_created_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "role_description": {
                    "type": "string",
                    "example": "description for role"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "type": "string"
                },
                "role_updated_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "role_version": {
                    "type": "integer",
                    "example": 1
                },
                "salt": {
                    "type": "string",
                    "example": "salt secret"
                },
                "token": {
                    "type": "string",
                    "example": "user token"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "can not use LocalTime",
                    "type": "string"
                },
                "drone_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gitlab_token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login_block_until": {
                    "type": "string"
                },
                "login_retry_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "reset_secret": {
                    "type": "string"
                },
                "role_id": {
                    "description": "Role            Role       `json:\"role\" gorm:\"ForeignKey:RoleId;AssociationForeignKey:Id\"` // use RoleId to ForeignKey",
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "secret_expired_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "description": "DeletedAt LocalTime `json:\"deleted_at\" gorm:\"type:timestamp;default:null\"`  // error\nDeletedAt LocalTime `json:\"deleted_at\" gorm:\"type:timestamp null\"`  // error",
                    "type": "integer"
                }
            }
        },
        "models.UserPagination": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "page_num": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "utils.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message here"
                },
                "error_code": {
                    "type": "integer",
                    "example": 50000001
                }
            }
        },
        "v1.AppBranchResp": {
            "type": "object",
            "properties": {
                "commit": {
                    "$ref": "#/definitions/v1.Commit"
                },
                "name": {
                    "type": "string",
                    "example": "G-v2.2.0-RTM"
                }
            }
        },
        "v1.AppBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description the app"
                },
                "drone_repo_id": {
                    "type": "integer",
                    "example": 1
                },
                "full_name": {
                    "type": "string",
                    "example": "senseguard/test_app"
                },
                "gitlab_address": {
                    "type": "string",
                    "example": "http://gitlab.sensetime.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test_app"
                },
                "owner": {
                    "type": "string",
                    "example": "1"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.AppConfDetailResp": {
            "type": "object",
            "required": [
                "config",
                "created_at",
                "id",
                "updated_at",
                "version"
            ],
            "properties": {
                "app_id": {
                    "type": "integer",
                    "example": 1
                },
                "config": {
                    "type": "string",
                    "example": "app config content"
                },
                "created_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "project_env_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.AppTagResp": {
            "type": "object",
            "properties": {
                "commit": {
                    "$ref": "#/definitions/v1.Commit"
                },
                "description": {
                    "type": "string",
                    "example": "description here"
                },
                "message": {
                    "type": "string",
                    "example": "debug set to false"
                },
                "name": {
                    "type": "string",
                    "example": "G-v2.2.0-RTM"
                }
            }
        },
        "v1.BuildBriefResp": {
            "type": "object",
            "properties": {
                "app_id": {
                    "description": "extendBuildField func add this field",
                    "type": "integer",
                    "example": 1
                },
                "author": {
                    "type": "string",
                    "example": "someone"
                },
                "author_email": {
                    "type": "string",
                    "example": "someone@sensetime.com"
                },
                "branch": {
                    "type": "string",
                    "example": "master"
                },
                "commit": {
                    "type": "string",
                    "example": "26b4808f0d35ac8f4621490166d683e255d9fed4"
                },
                "console_project_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "enqueued_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "finished_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "fix template issue\n"
                },
                "number": {
                    "type": "integer",
                    "example": 1
                },
                "repo_id": {
                    "type": "integer",
                    "example": 1
                },
                "started_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "status": {
                    "type": "string",
                    "example": "pending/success/failure"
                }
            }
        },
        "v1.BuildDetailResp": {
            "type": "object",
            "properties": {
                "app_id": {
                    "description": "extendBuildField func add this field",
                    "type": "integer",
                    "example": 1
                },
                "author": {
                    "type": "string",
                    "example": "someone"
                },
                "author_email": {
                    "type": "string",
                    "example": "someone@sensetime.com"
                },
                "branch": {
                    "type": "string",
                    "example": "master"
                },
                "commit": {
                    "type": "string",
                    "example": "26b4808f0d35ac8f4621490166d683e255d9fed4"
                },
                "console_project_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "enqueued_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "finished_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "fix template issue\n"
                },
                "number": {
                    "type": "integer",
                    "example": 1
                },
                "procs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RootProc"
                    }
                },
                "repo_id": {
                    "type": "integer",
                    "example": 1
                },
                "started_at": {
                    "type": "integer",
                    "example": 1614655426
                },
                "status": {
                    "type": "string",
                    "example": "pending/success/failure"
                }
            }
        },
        "v1.ChartDetail": {
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "mysql"
                },
                "version": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ChartVersion"
                    }
                }
            }
        },
        "v1.ChartVersion": {
            "type": "object",
            "required": [
                "created",
                "digest",
                "name",
                "urls",
                "version"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "example": "v1"
                },
                "appVersion": {
                    "type": "string",
                    "example": "5.7.28"
                },
                "created": {
                    "type": "string",
                    "example": "2020-10-23T08:27:01.937112605Z"
                },
                "description": {
                    "type": "string",
                    "example": "Fast, reliable, scalable, and easy to use open-source relational database system."
                },
                "digest": {
                    "type": "string",
                    "example": "76a25ee9205f22c1c922a54a88a161472c1966a54e9d483f16e960449a134ef3"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "mysql",
                        "database",
                        "sql"
                    ]
                },
                "maintainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Maintainer"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mysql"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "charts/mysql-5.7.28-master-54b0c26.tgz"
                    ]
                },
                "version": {
                    "type": "string",
                    "example": "5.7.28-master-54b0c26"
                }
            }
        },
        "v1.ClusterBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description for a k8s cluster"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test-cluster"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                }
            }
        },
        "v1.ClusterNodeResp": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeAnnotation"
                    }
                },
                "architecture": {
                    "type": "string",
                    "example": "amd64"
                },
                "container_run_time_version": {
                    "type": "string",
                    "example": "docker://19.3.4"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-02-13T18:12:05+08:00"
                },
                "hostname": {
                    "type": "string",
                    "example": "kubernetes-master1"
                },
                "internal_ip": {
                    "type": "string",
                    "example": "10.10.10.10"
                },
                "kernel_version": {
                    "type": "string",
                    "example": "4.18.0-193.6.3.el8_2.x86_64"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeLabel"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "kubernetes-master1"
                },
                "os": {
                    "type": "string",
                    "example": "linux"
                },
                "os_image": {
                    "type": "string",
                    "example": "CentOS Linux 8 (Core)"
                },
                "pod_cidr": {
                    "type": "string",
                    "example": "10.244.0.0/24"
                },
                "uid": {
                    "type": "string",
                    "example": "3550d3f1-51b4-41e7-ba65-83d029f31e2b"
                },
                "unschedulable": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "v1.Commit": {
            "type": "object",
            "properties": {
                "author_email": {
                    "type": "string",
                    "example": "someone@sensetime.com"
                },
                "author_name": {
                    "type": "string",
                    "example": "someone"
                },
                "authored_date": {
                    "type": "string",
                    "example": "2021-02-24T15:45:23.000+08:00"
                },
                "committer_date": {
                    "type": "string",
                    "example": "2021-02-24T15:45:23.000+08:00"
                },
                "committer_email": {
                    "type": "string",
                    "example": "someone@sensetime.com"
                },
                "committer_name": {
                    "type": "string",
                    "example": "someone"
                },
                "id": {
                    "type": "string",
                    "example": "9a44bd6973d12f2d280e9548c1ee430bf119d168"
                },
                "message": {
                    "type": "string",
                    "example": "debug set to false"
                }
            }
        },
        "v1.ContainerResp": {
            "type": "object",
            "required": [
                "image",
                "name"
            ],
            "properties": {
                "image": {
                    "type": "string",
                    "example": "10.151.3.75/sensenebula-guard-std/senseguard-oauth2:1.0.0-dev-fe380d"
                },
                "name": {
                    "type": "string",
                    "example": "senseguard-oauth2"
                }
            }
        },
        "v1.CreateAppReq": {
            "type": "object",
            "required": [
                "name",
                "project_id"
            ],
            "properties": {
                "description": {
                    "description": "描述这个app",
                    "type": "string",
                    "example": "description the app"
                },
                "gitlab_project_id": {
                    "description": "当前用户在gitlab上拥有的project名称(即app的名称)",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "新建的app的名称",
                    "type": "string",
                    "example": "test_app"
                },
                "project_id": {
                    "description": "属于哪个project(id关联)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.CreateBuildReq": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Env"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "master/v1.0.0"
                },
                "type": {
                    "type": "string",
                    "example": "branch/tag"
                }
            }
        },
        "v1.CreateClusterReq": {
            "type": "object",
            "required": [
                "config",
                "name"
            ],
            "properties": {
                "config": {
                    "type": "string",
                    "example": "k8s config file"
                },
                "description": {
                    "type": "string",
                    "example": "description for a k8s cluster"
                },
                "name": {
                    "type": "string",
                    "example": "test-cluster"
                }
            }
        },
        "v1.CreateDeploymentReq": {
            "type": "object",
            "required": [
                "app_id",
                "chart_name",
                "chart_version",
                "project_env_id"
            ],
            "properties": {
                "app_id": {
                    "type": "integer",
                    "example": 1
                },
                "chart_name": {
                    "type": "string",
                    "example": "senseguard-oauth2-default"
                },
                "chart_version": {
                    "type": "string",
                    "example": "1.0.0-dev-fe380d"
                },
                "description": {
                    "type": "string",
                    "example": "description for deployment"
                },
                "project_env_id": {
                    "description": "project id \u0026 namespace id",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.CreateEnvReq": {
            "type": "object",
            "required": [
                "cluster_id",
                "namespace"
            ],
            "properties": {
                "cluster_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "example": "description for env"
                },
                "namespace": {
                    "type": "string",
                    "example": "namespace of k8s cluster"
                }
            }
        },
        "v1.CreateProjectEnvReq": {
            "type": "object",
            "required": [
                "env_id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the cluster project env"
                },
                "env_id": {
                    "description": "env表中对应(基于cluster_id进行查询的)namespace对应的id字段值。如cluster_id为164的default名称空间对应的id为448",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "要创建的项目环境的名字(project_env表的name)",
                    "type": "string",
                    "example": "cluster name"
                }
            }
        },
        "v1.CreateProjectReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the project"
                },
                "name": {
                    "type": "string",
                    "example": "test-project"
                }
            }
        },
        "v1.CreateRegistryReq": {
            "type": "object",
            "required": [
                "address",
                "password",
                "username"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "10.151.3.75"
                },
                "password": {
                    "type": "string",
                    "example": "*********"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "v1.CreateRoleReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for role"
                },
                "name": {
                    "type": "string",
                    "example": "admin_role"
                }
            }
        },
        "v1.CreateSecretReq": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "docker_user"
                },
                "value": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "v1.CreateUserReq": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role_id"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                },
                "name": {
                    "type": "string",
                    "example": "admin_user"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                },
                "role_id": {
                    "description": "RoleId   *RoleIdReq `json:\"role_id\" binding:\"required\"`  // 用顺义的这种定义，ctx.ShouldBind报错",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.DeploymentDetailResp": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "integer",
                    "example": 1
                },
                "chart_name": {
                    "type": "string",
                    "example": "senseguard-oauth2"
                },
                "chart_version": {
                    "type": "string",
                    "example": "1.0.0-dev-000c37"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-03-09 15:18:13"
                },
                "description": {
                    "type": "string",
                    "example": "description for deployment"
                },
                "env_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "senseguard-oauth2-default"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-03-09 15:18:13"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.DroneRepoBriefResp": {
            "type": "object",
            "properties": {
                "clone_url": {
                    "type": "string",
                    "example": "http://gitlab.sz.sensetime.com/fis-infra/infra-console.git"
                },
                "full_name": {
                    "type": "string",
                    "example": "fis-infra/infra-console"
                },
                "is_added": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "infra-console"
                },
                "owner": {
                    "type": "string",
                    "example": "admin"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.Env": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "example": "key"
                },
                "value": {
                    "type": "string",
                    "example": "value"
                }
            }
        },
        "v1.EnvBriefResp": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description for env"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "namespace": {
                    "type": "string",
                    "example": "namespace of k8s cluster"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.GlobalNodeResp": {
            "type": "object",
            "required": [
                "cluster_id",
                "cluster_name"
            ],
            "properties": {
                "annotations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeAnnotation"
                    }
                },
                "architecture": {
                    "type": "string",
                    "example": "amd64"
                },
                "cluster_id": {
                    "type": "integer",
                    "example": 1
                },
                "cluster_name": {
                    "type": "string",
                    "example": "devops"
                },
                "container_run_time_version": {
                    "type": "string",
                    "example": "docker://19.3.4"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-02-13T18:12:05+08:00"
                },
                "hostname": {
                    "type": "string",
                    "example": "kubernetes-master1"
                },
                "internal_ip": {
                    "type": "string",
                    "example": "10.10.10.10"
                },
                "kernel_version": {
                    "type": "string",
                    "example": "4.18.0-193.6.3.el8_2.x86_64"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeLabel"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "kubernetes-master1"
                },
                "os": {
                    "type": "string",
                    "example": "linux"
                },
                "os_image": {
                    "type": "string",
                    "example": "CentOS Linux 8 (Core)"
                },
                "pod_cidr": {
                    "type": "string",
                    "example": "10.244.0.0/24"
                },
                "uid": {
                    "type": "string",
                    "example": "3550d3f1-51b4-41e7-ba65-83d029f31e2b"
                },
                "unschedulable": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "v1.InstanceBriefResp": {
            "type": "object",
            "properties": {
                "chart_name": {
                    "description": "helm deploy in cluster name, example: senseguard-oauth2",
                    "type": "string",
                    "example": "senseguard-oauth2"
                },
                "chart_version": {
                    "type": "string",
                    "example": "1.0.0-dev-fe380d"
                },
                "cluster_name": {
                    "type": "string",
                    "example": "test-cluster"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-03-11 16:47:37"
                },
                "env_namespace": {
                    "type": "string",
                    "example": "default"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "senseguard-oauth2-default"
                },
                "project_name": {
                    "type": "string",
                    "example": "test-project"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-03-11 16:47:37"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.InstanceConfResp": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "server:\n  port: 8080\n  servlet:\n    context-path: /sys\nspring:\n  application:\n    name: aurora-system-service\n  ..."
                },
                "name": {
                    "type": "string",
                    "example": "bootstrap.yaml"
                }
            }
        },
        "v1.InstanceDetailResp": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "integer",
                    "example": 1
                },
                "chart_name": {
                    "description": "helm deploy in cluster name, example: senseguard-oauth2",
                    "type": "string",
                    "example": "senseguard-oauth2"
                },
                "chart_version": {
                    "type": "string",
                    "example": "1.0.0-dev-fe380d"
                },
                "cluster_name": {
                    "type": "string",
                    "example": "test-cluster"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-03-11 16:47:37"
                },
                "env_id": {
                    "type": "integer",
                    "example": 1
                },
                "env_namespace": {
                    "type": "string",
                    "example": "default"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_deployment": {
                    "description": "deployment_id",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "senseguard-oauth2-default"
                },
                "project_name": {
                    "type": "string",
                    "example": "test-project"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-03-11 16:47:37"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.InstanceLogResp": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "container_name": {
                    "type": "string",
                    "example": "senseguard-oauth2"
                },
                "content": {
                    "type": "string",
                    "example": "log content here"
                },
                "pod_name": {
                    "type": "string",
                    "example": "senseguard-oauth2-7b78686878-vcx79"
                }
            }
        },
        "v1.InstancePod": {
            "type": "object",
            "required": [
                "containers",
                "dns_policy",
                "host_network",
                "name",
                "node_name",
                "pod_ip",
                "restart_policy",
                "start_time",
                "status"
            ],
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ContainerResp"
                    }
                },
                "dns_policy": {
                    "type": "string",
                    "example": "ClusterFirst"
                },
                "host_network": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "senseguard-oauth2-7b78686878-vcx79"
                },
                "node_name": {
                    "type": "string",
                    "example": "k8s-master1"
                },
                "pod_ip": {
                    "type": "string",
                    "example": "10.244.0.70"
                },
                "restart_policy": {
                    "type": "string",
                    "example": "Always"
                },
                "start_time": {
                    "type": "string",
                    "example": "2021-03-11T14:49:55+08:00"
                },
                "status": {
                    "type": "string",
                    "example": "Running"
                }
            }
        },
        "v1.InstancePodResp": {
            "type": "object",
            "required": [
                "namespace",
                "pods"
            ],
            "properties": {
                "namespace": {
                    "type": "string",
                    "example": "default"
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.InstancePod"
                    }
                }
            }
        },
        "v1.LoginUserInfo": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "admin_user"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                }
            }
        },
        "v1.Maintainer": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "someone@email.com"
                },
                "name": {
                    "type": "string",
                    "example": "someone"
                }
            }
        },
        "v1.NodeAnnotation": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "flannel.alpha.coreos.com/backend-type"
                },
                "value": {
                    "type": "string",
                    "example": "host-gw"
                }
            }
        },
        "v1.NodeLabel": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "beta.kubernetes.io/os"
                },
                "value": {
                    "type": "string",
                    "example": "linux"
                }
            }
        },
        "v1.PaginateAppResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AppBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginateBriefUserResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.UserBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginateRoleResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RoleBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationClusterResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ClusterBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationDeploymentResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.DeploymentDetailResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationEnvResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.EnvBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationInstanceResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.InstanceBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationProjectResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ProjectBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.ProcCommon": {
            "type": "object",
            "required": [
                "end_time",
                "exit_code",
                "id",
                "machine",
                "name",
                "pgid",
                "pid",
                "ppid",
                "start_time",
                "state"
            ],
            "properties": {
                "end_time": {
                    "type": "integer",
                    "example": 1542277389
                },
                "exit_code": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "machine": {
                    "type": "string",
                    "example": "2b545f3330cf"
                },
                "name": {
                    "type": "string",
                    "example": "clone"
                },
                "pgid": {
                    "type": "integer",
                    "example": 1
                },
                "pid": {
                    "type": "integer",
                    "example": 1
                },
                "ppid": {
                    "type": "integer",
                    "example": 1
                },
                "start_time": {
                    "type": "integer",
                    "example": 1542277389
                },
                "state": {
                    "type": "string",
                    "example": "success/failure"
                }
            }
        },
        "v1.ProjectBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description the project"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test-project"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                }
            }
        },
        "v1.ProjectEnvBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description the project"
                },
                "env_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test-project"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                }
            }
        },
        "v1.RegistryBriefResp": {
            "type": "object",
            "required": [
                "address",
                "username"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "10.151.3.75"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "v1.ResetPwdReq": {
            "type": "object",
            "required": [
                "email",
                "password",
                "re_password",
                "secret"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                },
                "re_password": {
                    "type": "string",
                    "example": "********"
                },
                "secret": {
                    "type": "string",
                    "example": "TR6UdhT7ebJOCC5N"
                }
            }
        },
        "v1.ResetUserReq": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                }
            }
        },
        "v1.RoleBriefResp": {
            "type": "object",
            "required": [
                "created_at",
                "description",
                "id",
                "name",
                "updated_at",
                "version"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "description": {
                    "type": "string",
                    "example": "description for role"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "admin_role"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.RootProc": {
            "type": "object",
            "required": [
                "children",
                "end_time",
                "exit_code",
                "id",
                "machine",
                "name",
                "pgid",
                "pid",
                "ppid",
                "start_time",
                "state"
            ],
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ProcCommon"
                    }
                },
                "end_time": {
                    "type": "integer",
                    "example": 1542277389
                },
                "exit_code": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "machine": {
                    "type": "string",
                    "example": "2b545f3330cf"
                },
                "name": {
                    "type": "string",
                    "example": "clone"
                },
                "pgid": {
                    "type": "integer",
                    "example": 1
                },
                "pid": {
                    "type": "integer",
                    "example": 1
                },
                "ppid": {
                    "type": "integer",
                    "example": 1
                },
                "start_time": {
                    "type": "integer",
                    "example": 1542277389
                },
                "state": {
                    "type": "string",
                    "example": "success/failure"
                }
            }
        },
        "v1.SecretBriefResp": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "docker_user"
                }
            }
        },
        "v1.UpdateAppConfReq": {
            "type": "object",
            "required": [
                "config",
                "project_env_id"
            ],
            "properties": {
                "config": {
                    "type": "string",
                    "example": "the app helm chart values.yaml config content"
                },
                "project_env_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.UpdateAppGitlabAddressReq": {
            "type": "object",
            "required": [
                "gitlab_project_id"
            ],
            "properties": {
                "gitlab_project_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.UpdateAppReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for app"
                }
            }
        },
        "v1.UpdateClusterReq": {
            "type": "object",
            "required": [
                "config"
            ],
            "properties": {
                "config": {
                    "type": "string",
                    "example": "k8s config file"
                },
                "description": {
                    "type": "string",
                    "example": "description the cluster"
                }
            }
        },
        "v1.UpdateDeploymentReq": {
            "type": "object",
            "required": [
                "app_id",
                "chart_name",
                "chart_version",
                "project_env_id"
            ],
            "properties": {
                "app_id": {
                    "type": "integer"
                },
                "chart_name": {
                    "type": "string",
                    "example": "senseguard-oauth2"
                },
                "chart_version": {
                    "type": "string",
                    "example": "1.0.0-dev-000c37"
                },
                "description": {
                    "type": "string",
                    "example": "description for deployment"
                },
                "project_env_id": {
                    "type": "integer"
                }
            }
        },
        "v1.UpdateEnvReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for env"
                }
            }
        },
        "v1.UpdateProjectEnvReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the project env"
                }
            }
        },
        "v1.UpdateProjectReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the project"
                }
            }
        },
        "v1.UpdateRegistryReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "admin"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "v1.UpdateRoleReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for role"
                }
            }
        },
        "v1.UpdateSecretReq": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "v1.UpdateUserAccessTokenReq": {
            "type": "object",
            "required": [
                "gitlab_token"
            ],
            "properties": {
                "gitlab_token": {
                    "description": "gitlab access token",
                    "type": "string",
                    "example": "real gitlab access token"
                }
            }
        },
        "v1.UpdateUserPwdReq": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "********"
                },
                "old_password": {
                    "type": "string",
                    "example": "********"
                }
            }
        },
        "v1.UpdateUserRoleReq": {
            "type": "object",
            "required": [
                "role_id"
            ],
            "properties": {
                "role_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.UserBriefResp": {
            "type": "object",
            "required": [
                "created_at",
                "email",
                "id",
                "name",
                "role_id",
                "updated_at",
                "version"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "email": {
                    "type": "string",
                    "example": "admin@sensetime.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "admin_role"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}