{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/apps": {
            "get": {
                "description": "Api to get all apps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get all apps",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "App number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "query_field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateAppResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Create app",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateAppReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.AppBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}": {
            "get": {
                "description": "api for get an app by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get an app by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.AppBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update app description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Update app description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update app description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAppReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for get an app by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Get an app by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}/gitlab": {
            "put": {
                "description": "api for update app gitlab address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APP"
                ],
                "summary": "Update app gitlab address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update app gitlab address",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAppGitlabAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.AppBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Api to login rock platform with name and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Login rock platform with name and password",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LoginUserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "description": "Api to logout rock platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Logout rock platform",
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/pwd": {
            "put": {
                "description": "Api to update user password with secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Update user's password with secret",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ResetPwdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/auth/reset": {
            "post": {
                "description": "Api to create reset email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Create reset email",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ResetUserReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/charts": {
            "get": {
                "description": "Api for get all chart list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Get all chart list",
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChartDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/charts/{name}": {
            "get": {
                "description": "Api for get named chart version list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Get named chart version list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChartVersion"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/charts/{name}/versions/{version}": {
            "get": {
                "description": "Api for get named chart specific version info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Get named chart specific version info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chart version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ChartVersion"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api for delete named chart specific version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CHART"
                ],
                "summary": "Delete named chart specific version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chart version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters": {
            "get": {
                "description": "Api to get all k8s clusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get all clusters",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Cluster number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "query_field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationClusterResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create k8s cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Create cluster",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateClusterReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}": {
            "get": {
                "description": "Api to get a cluster by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get a cluster by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update cluster description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Update cluster description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update cluster description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateClusterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete a cluster by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Delete a cluster by id",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}/envs": {
            "get": {
                "description": "api for get cluster envs by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get cluster envs by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Env number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationEnvResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}/nodes": {
            "get": {
                "description": "api for get specific cluster's all nodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get specific cluster's all nodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ClusterNodeResp"
                            }
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/clusters/{id}/nodes/{name}": {
            "get": {
                "description": "api for get a specific cluster node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CLUSTER"
                ],
                "summary": "Get a specific cluster node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ClusterNodeResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/envs": {
            "get": {
                "description": "Api to get all env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Get all envs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Env number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationEnvResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Create env",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateEnvReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.EnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/envs/{id}": {
            "get": {
                "description": "api for get an env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Get an env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Env ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.EnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update env description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Update env description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Env ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update env description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.EnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for get an env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ENV"
                ],
                "summary": "Get an env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Env ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects": {
            "get": {
                "description": "Api to get all projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get all projects",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Project number size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "query_field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginationProjectResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateProjectReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}": {
            "get": {
                "description": "Api to get a project by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get a project by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update project description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Update project description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update project description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete a project by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Delete a project by id",
                "parameters": [
                    {
                        "description": "Project ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}/apps": {
            "get": {
                "description": "api for get all apps by project id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get all apps by species project id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateAppResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}/project-envs": {
            "get": {
                "description": "api for get all project env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get all project env",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "api for create project env by project_id env_id name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Create project env by project_id env_id name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateProjectEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}/project-envs/{pe_id}": {
            "get": {
                "description": "api for get project env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Get project env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project Env ID",
                        "name": "pe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update project env description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Update project env description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project Env ID",
                        "name": "pe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update project env description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateProjectEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.ProjectEnvBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for delete specific project env by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PROJECT"
                ],
                "summary": "Delete specific project env by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project Env ID",
                        "name": "pe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/repos": {
            "get": {
                "description": "Api to get remote(gitlab) all repos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPO"
                ],
                "summary": "Get remote all repos",
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.DroneRepoBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/roles": {
            "get": {
                "description": "api for get all roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Get role",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "QueryField",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateRoleResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "api for create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StatusCreated",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/roles/{id}": {
            "get": {
                "description": "api for get an role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Get an role by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "api for update role description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Update role description by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON type for update role description",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.RoleBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "api for delete an role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Delete an role by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "StatusNoContent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/roles/{id}/users": {
            "get": {
                "description": "api for get all users by species role id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ROLE"
                ],
                "summary": "Get all users by species role id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatusOK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginateBriefUserResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "Api to get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Request page number",
                        "name": "PageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Request page size",
                        "name": "PageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy Query(field: name)",
                        "name": "QueryField",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserPagination"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Api to create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "JSON type input body",
                        "name": "input_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "description": "Api to get user with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Get user with id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api to delete user with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Delete user with id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/access": {
            "put": {
                "description": "Api to update user access token info by id and body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Update user access token info by id and body",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for update user access token",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserAccessTokenReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.UserBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/password": {
            "put": {
                "description": "Api to update user password with id and old password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Update user password with id and old password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for update user info",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserPwdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/roles": {
            "put": {
                "description": "Api to update user role by id and role id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Update user role by id and role id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for update user role",
                        "name": "update_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.UserBriefResp"
                        }
                    },
                    "400": {
                        "description": "StatusBadRequest",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "StatusNotFound",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "StatusInternalServerError",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.UserDetailResp": {
            "type": "object",
            "required": [
                "role_description",
                "role_version"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "drone_token": {
                    "type": "string",
                    "example": "drone_token"
                },
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                },
                "gitlab_token": {
                    "type": "string",
                    "example": "gitlabe_token"
                },
                "id": {
                    "description": "type UserFullResp struct {",
                    "type": "integer",
                    "example": 1
                },
                "login_block_until": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "name": {
                    "type": "string",
                    "example": "admin_user"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                },
                "role_created_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "role_description": {
                    "type": "string",
                    "example": "description for role"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "type": "string"
                },
                "role_updated_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                },
                "role_version": {
                    "type": "integer",
                    "example": 1
                },
                "salt": {
                    "type": "string",
                    "example": "salt secret"
                },
                "token": {
                    "type": "string",
                    "example": "user token"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-12-20 15:15:22"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "can not use LocalTime",
                    "type": "string"
                },
                "drone_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gitlab_token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login_block_until": {
                    "type": "string"
                },
                "login_retry_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "reset_secret": {
                    "type": "string"
                },
                "role_id": {
                    "description": "Role            Role       `json:\"role\" gorm:\"ForeignKey:RoleId;AssociationForeignKey:Id\"` // use RoleId to ForeignKey",
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "secret_expired_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "description": "DeletedAt LocalTime `json:\"deleted_at\" gorm:\"type:timestamp;default:null\"`  // error\nDeletedAt LocalTime `json:\"deleted_at\" gorm:\"type:timestamp null\"`  // error",
                    "type": "integer"
                }
            }
        },
        "models.UserPagination": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "page_num": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "utils.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message here"
                },
                "error_code": {
                    "type": "integer",
                    "example": 50000001
                }
            }
        },
        "v1.AppBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description the app"
                },
                "drone_repo_id": {
                    "type": "integer",
                    "example": 1
                },
                "full_name": {
                    "type": "string",
                    "example": "senseguard/test_app"
                },
                "gitlab_address": {
                    "type": "string",
                    "example": "http://gitlab.sensetime.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test_app"
                },
                "owner": {
                    "type": "string",
                    "example": "1"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.ChartDetail": {
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "mysql"
                },
                "version": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ChartVersion"
                    }
                }
            }
        },
        "v1.ChartVersion": {
            "type": "object",
            "required": [
                "created",
                "digest",
                "name",
                "urls",
                "version"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "example": "v1"
                },
                "appVersion": {
                    "type": "string",
                    "example": "5.7.28"
                },
                "created": {
                    "type": "string",
                    "example": "2020-10-23T08:27:01.937112605Z"
                },
                "description": {
                    "type": "string",
                    "example": "Fast, reliable, scalable, and easy to use open-source relational database system."
                },
                "digest": {
                    "type": "string",
                    "example": "76a25ee9205f22c1c922a54a88a161472c1966a54e9d483f16e960449a134ef3"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "mysql",
                        "database",
                        "sql"
                    ]
                },
                "maintainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Maintainer"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mysql"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "charts/mysql-5.7.28-master-54b0c26.tgz"
                    ]
                },
                "version": {
                    "type": "string",
                    "example": "5.7.28-master-54b0c26"
                }
            }
        },
        "v1.ClusterBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description for a k8s cluster"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test-cluster"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                }
            }
        },
        "v1.ClusterNodeResp": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeAnnotation"
                    }
                },
                "architecture": {
                    "type": "string",
                    "example": "amd64"
                },
                "container_run_time_version": {
                    "type": "string",
                    "example": "docker://19.3.4"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-02-13T18:12:05+08:00"
                },
                "hostname": {
                    "type": "string",
                    "example": "kubernetes-master1"
                },
                "internal_ip": {
                    "type": "string",
                    "example": "10.10.10.10"
                },
                "kernel_version": {
                    "type": "string",
                    "example": "4.18.0-193.6.3.el8_2.x86_64"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeLabel"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "kubernetes-master1"
                },
                "os": {
                    "type": "string",
                    "example": "linux"
                },
                "os_image": {
                    "type": "string",
                    "example": "CentOS Linux 8 (Core)"
                },
                "pod_cidr": {
                    "type": "string",
                    "example": "10.244.0.0/24"
                },
                "uid": {
                    "type": "string",
                    "example": "3550d3f1-51b4-41e7-ba65-83d029f31e2b"
                },
                "unschedulable": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "v1.CreateAppReq": {
            "type": "object",
            "required": [
                "name",
                "project_id"
            ],
            "properties": {
                "description": {
                    "description": "描述这个app",
                    "type": "string",
                    "example": "description the app"
                },
                "gitlab_project_id": {
                    "description": "当前用户在gitlab上拥有的project名称(即app的名称)",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "新建的app的名称",
                    "type": "string",
                    "example": "test_app"
                },
                "project_id": {
                    "description": "属于哪个project(id关联)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.CreateClusterReq": {
            "type": "object",
            "required": [
                "config",
                "name"
            ],
            "properties": {
                "config": {
                    "type": "string",
                    "example": "k8s config file"
                },
                "description": {
                    "type": "string",
                    "example": "description for a k8s cluster"
                },
                "name": {
                    "type": "string",
                    "example": "test-cluster"
                }
            }
        },
        "v1.CreateEnvReq": {
            "type": "object",
            "required": [
                "cluster_id",
                "namespace"
            ],
            "properties": {
                "cluster_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "example": "description for env"
                },
                "namespace": {
                    "type": "string",
                    "example": "namespace of k8s cluster"
                }
            }
        },
        "v1.CreateProjectEnvReq": {
            "type": "object",
            "required": [
                "env_id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the cluster project env"
                },
                "env_id": {
                    "description": "env表中对应(基于cluster_id进行查询的)namespace对应的id字段值。如cluster_id为164的default名称空间对应的id为448",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "要创建的项目环境的名字(project_env表的name)",
                    "type": "string",
                    "example": "cluster name"
                }
            }
        },
        "v1.CreateProjectReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the project"
                },
                "name": {
                    "type": "string",
                    "example": "test-project"
                }
            }
        },
        "v1.CreateRoleReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for role"
                },
                "name": {
                    "type": "string",
                    "example": "admin_role"
                }
            }
        },
        "v1.CreateUserReq": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role_id"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                },
                "name": {
                    "type": "string",
                    "example": "admin_user"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                },
                "role_id": {
                    "description": "RoleId   *RoleIdReq `json:\"role_id\" binding:\"required\"`  // 用顺义的这种定义，ctx.ShouldBind报错",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.DroneRepoBriefResp": {
            "type": "object",
            "properties": {
                "clone_url": {
                    "type": "string",
                    "example": "http://gitlab.sz.sensetime.com/fis-infra/infra-console.git"
                },
                "full_name": {
                    "type": "string",
                    "example": "fis-infra/infra-console"
                },
                "is_added": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "infra-console"
                },
                "owner": {
                    "type": "string",
                    "example": "admin"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.EnvBriefResp": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description for env"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "namespace": {
                    "type": "string",
                    "example": "namespace of k8s cluster"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.LoginUserInfo": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "admin_user"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                }
            }
        },
        "v1.Maintainer": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "someone@email.com"
                },
                "name": {
                    "type": "string",
                    "example": "someone"
                }
            }
        },
        "v1.NodeAnnotation": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "flannel.alpha.coreos.com/backend-type"
                },
                "value": {
                    "type": "string",
                    "example": "host-gw"
                }
            }
        },
        "v1.NodeLabel": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "beta.kubernetes.io/os"
                },
                "value": {
                    "type": "string",
                    "example": "linux"
                }
            }
        },
        "v1.PaginateAppResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AppBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginateBriefUserResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.UserBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginateRoleResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RoleBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationClusterResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ClusterBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationEnvResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.EnvBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.PaginationProjectResp": {
            "type": "object",
            "required": [
                "items",
                "page_num",
                "page_size",
                "pages",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ProjectBriefResp"
                    }
                },
                "page_num": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "pages": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.ProjectBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description the project"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test-project"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                }
            }
        },
        "v1.ProjectEnvBriefResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                },
                "description": {
                    "type": "string",
                    "example": "description the project"
                },
                "env_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test-project"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-28 20:20:20"
                }
            }
        },
        "v1.ResetPwdReq": {
            "type": "object",
            "required": [
                "email",
                "password",
                "re_password",
                "secret"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                },
                "password": {
                    "type": "string",
                    "example": "********"
                },
                "re_password": {
                    "type": "string",
                    "example": "********"
                },
                "secret": {
                    "type": "string",
                    "example": "TR6UdhT7ebJOCC5N"
                }
            }
        },
        "v1.ResetUserReq": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin_user@sensetime.com"
                }
            }
        },
        "v1.RoleBriefResp": {
            "type": "object",
            "required": [
                "created_at",
                "description",
                "id",
                "name",
                "updated_at",
                "version"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "description": {
                    "type": "string",
                    "example": "description for role"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "admin_role"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.UpdateAppGitlabAddressReq": {
            "type": "object",
            "required": [
                "gitlab_project_id"
            ],
            "properties": {
                "gitlab_project_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.UpdateAppReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for app"
                }
            }
        },
        "v1.UpdateClusterReq": {
            "type": "object",
            "required": [
                "config"
            ],
            "properties": {
                "config": {
                    "type": "string",
                    "example": "k8s config file"
                },
                "description": {
                    "type": "string",
                    "example": "description the cluster"
                }
            }
        },
        "v1.UpdateEnvReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for env"
                }
            }
        },
        "v1.UpdateProjectEnvReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the project env"
                }
            }
        },
        "v1.UpdateProjectReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description the project"
                }
            }
        },
        "v1.UpdateRoleReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description for role"
                }
            }
        },
        "v1.UpdateUserAccessTokenReq": {
            "type": "object",
            "required": [
                "gitlab_token"
            ],
            "properties": {
                "gitlab_token": {
                    "description": "gitlab access token",
                    "type": "string",
                    "example": "real gitlab access token"
                }
            }
        },
        "v1.UpdateUserPwdReq": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "********"
                },
                "old_password": {
                    "type": "string",
                    "example": "********"
                }
            }
        },
        "v1.UpdateUserRoleReq": {
            "type": "object",
            "required": [
                "role_id"
            ],
            "properties": {
                "role_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.UserBriefResp": {
            "type": "object",
            "required": [
                "created_at",
                "email",
                "id",
                "name",
                "role_id",
                "updated_at",
                "version"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "email": {
                    "type": "string",
                    "example": "admin@sensetime.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "admin_role"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2018-10-09T14:57:23+08:00"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}