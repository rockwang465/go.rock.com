definitions:
  api.UserDetailResp:
    properties:
      created_at:
        example: "2020-12-20 15:15:22"
        type: string
      email:
        example: admin_user@sensetime.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: admin_user
        type: string
      role_created_at:
        example: "2020-12-20 15:15:22"
        type: string
      role_description:
        example: description for role
        type: string
      role_id:
        type: integer
      role_name:
        type: string
      role_updated_at:
        example: "2020-12-20 15:15:22"
        type: string
      role_version:
        example: 1
        type: integer
      updated_at:
        example: "2020-12-20 15:15:22"
        type: string
    required:
    - role_description
    - role_version
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        description: can not use LocalTime
        type: string
      email:
        type: string
      id:
        type: integer
      login_block_until:
        type: string
      login_retry_count:
        description: |-
          ResetSecret     string     `json:"reset_secret"`
          SecretExpiredAt *time.Time `json:"secret_expired_at"`
        type: integer
      name:
        type: string
      password:
        type: string
      role_id:
        description: Role            Role       `json:"role" gorm:"ForeignKey:RoleId;AssociationForeignKey:Id"`
          // use RoleId to ForeignKey
        type: integer
      salt:
        type: string
      token:
        description: |-
          GitlabToken     string     `json:"gitlab_token"`
          DroneToken      string     `json:"drone_token"`
        type: string
      updated_at:
        type: string
      version:
        description: |-
          DeletedAt LocalTime `json:"deleted_at" gorm:"type:timestamp;default:null"`  // error
          DeletedAt LocalTime `json:"deleted_at" gorm:"type:timestamp null"`  // error
        type: integer
    type: object
  models.UserPagination:
    properties:
      items:
        items:
          $ref: '#/definitions/models.User'
        type: array
      page_num:
        type: integer
      page_size:
        type: integer
      pages:
        type: integer
      total:
        type: integer
    type: object
  utils.HTTPError:
    properties:
      error:
        example: error message here
        type: string
      error_code:
        example: 50000001
        type: integer
    type: object
  v1.CreateUserReq:
    properties:
      email:
        example: admin_user@sensetime.com
        type: string
      name:
        example: admin_user
        type: string
      password:
        example: '********'
        type: string
      role_id:
        description: RoleId   *RoleIdReq `json:"role_id" binding:"required"`  // 用顺义的这种定义，ctx.ShouldBind报错
        example: 1
        type: integer
    required:
    - email
    - name
    - password
    - role_id
    type: object
  v1.GetPaginationReq:
    properties:
      page_num:
        example: 1
        type: integer
      page_size:
        example: 20
        type: integer
      query_field:
        example: rock
        type: string
    required:
    - page_num
    - page_size
    - query_field
    type: object
  v1.LoginUserInfo:
    properties:
      name:
        example: admin_user
        type: string
      password:
        example: '********'
        type: string
    required:
    - name
    - password
    type: object
info:
  contact: {}
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Api to login rock platform with name and password
      parameters:
      - description: JSON type input body
        in: body
        name: input_body
        required: true
        schema:
          $ref: '#/definitions/v1.LoginUserInfo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.UserDetailResp'
        "400":
          description: StatusBadRequest
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: StatusInternalServerError
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Login rock platform with name and password
      tags:
      - AUTH
  /v1/users:
    get:
      consumes:
      - application/json
      description: Api to get all users
      parameters:
      - description: JSON type input body
        in: body
        name: input_body
        required: true
        schema:
          $ref: '#/definitions/v1.GetPaginationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserPagination'
        "400":
          description: StatusBadRequest
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: StatusInternalServerError
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get users
      tags:
      - USER
    post:
      consumes:
      - application/json
      description: Api to create user
      parameters:
      - description: JSON type input body
        in: body
        name: input_body
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserDetailResp'
        "400":
          description: StatusBadRequest
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: StatusInternalServerError
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Create user
      tags:
      - USER
swagger: "2.0"
